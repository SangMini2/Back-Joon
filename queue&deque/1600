import sys
input = sys.stdin.readline
from collections import deque
from copy import deepcopy

k = int(input())
w, h = map(int, input().strip().split())
arr = [list(map(int, input().strip().split())) for _ in range(h)]
visited = [[[0] * (k+1) for _ in range(w)] for _ in range(h)]

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

horse_x = [-2, -2, -1, -1, 1, 1, 2, 2]
horse_y = [-1, 1, -2, 2, -2, 2, -1, 1]

ans = float('inf')

q = deque([[0,0,k]])
flag = 0


while q:
    x, y, horse = q.popleft()
    if x == h-1 and y == w-1:
        flag = 1
        print(visited[x][y][horse])
        break
         
    if horse > 0:
        for i in range(8):
            nx, ny = x + horse_x[i], y + horse_y[i]
            if 0 <= nx < h and 0 <= ny < w and arr[nx][ny] == 0 and visited[nx][ny][horse-1] == 0:
                visited[nx][ny][horse - 1] = visited[x][y][horse] + 1
                q.append([nx, ny, horse-1])
        for j in range(4):
            nx, ny = x + dx[j], y + dy[j]
            if 0 <= nx < h and 0 <= ny < w and arr[nx][ny] == 0 and visited[nx][ny][horse] == 0:
                visited[nx][ny][horse] = visited[x][y][horse] + 1
                q.append([nx, ny, horse])
    
    else:
        for l in range(4):
            nx, ny = x + dx[l], y + dy[l]
            if 0 <= nx < h and 0 <= ny < w and arr[nx][ny] == 0 and visited[nx][ny][horse] == 0:
                visited[nx][ny][horse] = visited[x][y][horse] + 1
                q.append([nx, ny, horse])
                
if flag == 0:
    print(-1)
