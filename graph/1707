import sys
input = sys.stdin.readline
from copy import deepcopy
from collections import deque


def bfs(arr, start):
    q = deque()
    q.append(start)
    if visited[start] == 0:
        visited[start] = 1
    while q:
        check = q.popleft()

        for i in arr[check]:
            if visited[i] == 0:
                q.append(i)
                if visited[check] == 1:
                    visited[i] = 2
                else:
                    visited[i] = 1
            elif visited[i] == 1:
                if visited[check] == 1:
                    return 0
            elif visited[i] == 2:
                if visited[check] == 2:
                    return 0
    return -1


n = int(input())
for _ in range(n) :
    v , e = map(int, input().strip().split())
    vertex = [i+1 for i in range(v)]
    data = [[] for _ in range(v+1)]
    for i in range(e) :
        a,b = map(int, input().strip().split())
        data[a].append(b)
        data[b].append(a)
    visited = [0] * (v+1)

    flag = 0
    for i in range(1,v+1) :
        if bfs(data , i) == 0 :
            flag = 1
            print("NO")
            break
    if flag == 0 :
        print("YES")
