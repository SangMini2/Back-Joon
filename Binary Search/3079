import sys
input = sys.stdin.readline

# 사람 : M명, 입국 심사대 : N개
# 심사 시간은 사람마다 다름 -> k번 심사대 : T_k

n, m = map(int, input().strip().split()) # n < 100,000 & m < 1,000,000,000

# 여기서 이분 탐색 : 몇 초가 걸렸을 때 모든 인원을 가능하게 하는지에 대해 "시간"을 이분 탐색 하는 것!
# 0초부터~1,000,000,000초까지 m명을 처리하면서 가장 적게 걸리는 시간(초)이 얼마일까?

# 정렬 & 해당 값을 찾는 문제 -> 여기서는 정렬을 할 필요가 없음. 왜냐하면 0초부터 1,000,000,000초까지 중에 하나를 고르는 거니까
# 정렬과는 상관 없고, 해당 숫자를 빨리 찾는 문제다!

# 방법 : 아, 몇 시간이 걸릴지 체크를 해주는데. 해당 값이 (time // 해당 값)을 다 더해줬을 때의 값이 m이면 됨. 그 중 가장 작은 시간!
    
time = [int(input()) for _ in range(n)]
# 범위를 잡아줄 때, 가장 작은 수부터 가장 큰 수 * m번 을 범위로 둔다.
# (작은 수 * m, 큰 수 * m) 범위로 잡아주면, [2,2,3] 이고 사람이 3명이라고 하면 각각에 들어가면 3초만에 끝나는데, 앞의 범위대로
# 잡아주면 6부터 시작이 된다! 그렇기 때문에 수는 0이나 가장 작은 수로 잡아주는 것이 예외 케이스를 없앨 수 있음!

left = min(time)
right = max(time) * m
cnt = 0

while left < right:
    mid = (left + right) // 2
    total = 0
    for t in time:
        total += (mid // t)
    
    if total < m: # 더 커져야 함! m이 목표!
        left = mid + 1
    else:
        right = mid

print(left)              
