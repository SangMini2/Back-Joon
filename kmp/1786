import sys
input = sys.stdin.readline
t = input()
p = input()
'''
t = input().strip() 으로 받아서 많이 틀렸었다..
문제에서 공백과 줄 바꿈을 다르게 인식해서 풀어야한다..
strip() 함수를 이용하면, 공백 모두를 없애줘서 space와 \n 을 모두 없애준다..
space는 없애주면 안된다. 양 끝이라도..
'''
if t[-1] == '\n':
    t = t[:-1]

if p[-1] == '\n':
    p = p[:-1]


def KMP_table(pattern):
    len_pattern = len(pattern)
    table = [0] * len_pattern

    for i in range(1, len_pattern):
        start_idx = table[i-1]
        if pattern[start_idx] == pattern[i]:  # 연속적으로 맞는다면,
            start_idx += 1
            table[i] = table[i-1] + 1
        else:  # 연속이 깨진다면?
            cnt = 0
            end_idx = i
            while start_idx != 0:
                start_idx -= 1
                if pattern[end_idx] == pattern[start_idx]:  # 연속으로 증가시키지 않고, 그 전꺼부터 다시 확인
                    cnt += 1
                    end_idx -= 1

                else:  # 틀린다면?
                    end_idx = i
                    cnt = 0

            table[i] = cnt

    return table, len_pattern


def KMP(text, pattern):
    table, len_pattern = KMP_table(pattern)

    answer_indices = []
    num_answer = 0

    text_idx = 0
    pattern_idx = 0
    len_text = len(text)

    while text_idx + len_pattern <= len_text:
        if text[text_idx + pattern_idx] == pattern[pattern_idx]:
            pattern_idx += 1
        else:
            if pattern_idx == 0:  # 처음부터 틀리는 경우
                text_idx += 1
            else:
                text_idx += (pattern_idx - table[pattern_idx - 1])
                pattern_idx = table[pattern_idx - 1]

        if pattern_idx == len_pattern:
            num_answer += 1
            answer_indices.append(text_idx + 1)
            pattern_idx = table[-1]
            text_idx += (len_pattern - table[-1])

    return answer_indices, num_answer


lst, num = KMP(t, p)

print(num)
print(* lst)
