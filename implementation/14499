import sys
input = sys.stdin.readline

# 이동 칸에 쓰여 있는 수가 0 -> 주사위의 바닥면에 쓰여 있는 수가 칸에 복사
# 이동 칸에 쓰여 있는 수가 0이 아님 -> 칸에 쓰여 있는 수가 주사위의 바닥면으로 & 칸의 수가 0으로

# 주사위가 이동했을 때마다 상단에 쓰여 있는 값을 구하는 프로그램

die = [[-1, 0, -1], [0, 0, 0], [-1, 0, -1], [-1, 0, -1]]

n, m, x, y, k = map(int, input().strip().split())

# [direction] 1: 동쪽, 2: 서쪽, 3: 북쪽, 4: 남쪽
dir_dic = {1: (0, 1), 2: (0, -1), 3: (-1, 0), 4: (1, 0)}

the_map = [list(map(int, input().strip().split())) for _ in range(n)]

directions = list(map(int, input().strip().split()))
die_up = [1, 1]

# 가로로 돌리면, 1행이 움직이고
# 세로로 돌리면, 1열이 움직임

# 가로로 움직이면 [1, 0], [1, 1], [1, 2], [3, 1] / 맨 앞에 tmp로 둬야할듯..

# right: [3, 1] -> [1, 0]
def left():
    global die
    
    tmp = die[1][0]
    die[1][0] = die[1][1]
    die[1][1] = die[1][2]
    die[1][2] = die[3][1]
    die[3][1] = tmp


def right():
    global die
    
    tmp = die[3][1]
    die[3][1] = die[1][2]
    die[1][2] = die[1][1]
    die[1][1] = die[1][0]
    die[1][0] = tmp

# 세로: [0, 1], [1, 1], [2, 1], [3, 1]
def up(): # 2 -> 6
    global die
    
    tmp = die[0][1]
    die[0][1] = die[3][1]
    die[3][1] = die[2][1]
    die[2][1] = die[1][1]
    die[1][1] = tmp


def down():
    global die
    
    tmp = die[3][1]
    die[3][1] = die[0][1]
    die[0][1] = die[1][1]
    die[1][1] = die[2][1]
    die[2][1] = tmp


for dir in directions:
    dx, dy = dir_dic[dir]
    nx, ny = x + dx, y + dy

    if 0 <= nx < n and 0 <= ny < m: # 범위 안에 있어야 진행
        # 주사위 굴리기 해야 함
        if dir == 1: # 동쪽
            right()
        elif dir == 2: # 서쪽
            left()
        elif dir == 3: # 위쪽
            up()
        else:
            down()
        
        
        if the_map[nx][ny] == 0: # 해당 map에서 그 위치가 0인 경우: 주사위의 바닥 값을 복사해감
            the_map[nx][ny] = die[3][1]
        
        else:
            die[3][1] = the_map[nx][ny]
            the_map[nx][ny] = 0
        
        print(die[1][1])
        x = nx
        y = ny
