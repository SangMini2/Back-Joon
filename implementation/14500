import sys
input = sys.stdin.readline

n, m = map(int, input().strip().split())
arr = [list(map(int, input().strip().split())) for _ in range(n)]
visited = [[0] * m for _ in range(n)]


dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]
ans = 0

def dfs(x, y, idx, total):
    global ans
    
    if idx == 3:
        ans = max(ans, total)
        return
    else:
        for i in range(4):
            nx, ny = x + dx[i], y + dy[i]
            if 0 <= nx < n and 0 <= ny < m and visited[nx][ny] == 0:
                if idx == 1: # 빠큐 모양을 위한 식
                    visited[nx][ny] = 1
                    dfs(x, y, idx + 1, total + arr[nx][ny])
                    visited[nx][ny] = 0
                    
                visited[nx][ny] = 1    
                dfs(nx, ny, idx + 1, total + arr[nx][ny])
                visited[nx][ny] = 0


for x in range(n):
    for y in range(m):
        visited[x][y] = 1
        dfs(x, y, 0, arr[x][y])
        visited[x][y] = 0

print(ans)
